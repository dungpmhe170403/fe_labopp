/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as PublicHomeIndexImport } from './routes/_public/home/index'
import { Route as AuthSubmitlabIndexImport } from './routes/_auth/submit_lab/index'
import { Route as AuthResultIndexImport } from './routes/_auth/result/index'
import { Route as AuthLocPersonIndexImport } from './routes/_auth/loc-person/index'
import { Route as AuthAssignmentlistIndexImport } from './routes/_auth/assignmentlist/index'
import { Route as AuthAboutIndexImport } from './routes/_auth/about/index'

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PublicHomeIndexRoute = PublicHomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => PublicRoute,
} as any)

const AuthSubmitlabIndexRoute = AuthSubmitlabIndexImport.update({
  id: '/submit_lab/',
  path: '/submit_lab/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthResultIndexRoute = AuthResultIndexImport.update({
  id: '/result/',
  path: '/result/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLocPersonIndexRoute = AuthLocPersonIndexImport.update({
  id: '/loc-person/',
  path: '/loc-person/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAssignmentlistIndexRoute = AuthAssignmentlistIndexImport.update({
  id: '/assignmentlist/',
  path: '/assignmentlist/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAboutIndexRoute = AuthAboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_auth/about/': {
      id: '/_auth/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthAboutIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/assignmentlist/': {
      id: '/_auth/assignmentlist/'
      path: '/assignmentlist'
      fullPath: '/assignmentlist'
      preLoaderRoute: typeof AuthAssignmentlistIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/loc-person/': {
      id: '/_auth/loc-person/'
      path: '/loc-person'
      fullPath: '/loc-person'
      preLoaderRoute: typeof AuthLocPersonIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/result/': {
      id: '/_auth/result/'
      path: '/result'
      fullPath: '/result'
      preLoaderRoute: typeof AuthResultIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/submit_lab/': {
      id: '/_auth/submit_lab/'
      path: '/submit_lab'
      fullPath: '/submit_lab'
      preLoaderRoute: typeof AuthSubmitlabIndexImport
      parentRoute: typeof AuthImport
    }
    '/_public/home/': {
      id: '/_public/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof PublicHomeIndexImport
      parentRoute: typeof PublicImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAboutIndexRoute: typeof AuthAboutIndexRoute
  AuthAssignmentlistIndexRoute: typeof AuthAssignmentlistIndexRoute
  AuthLocPersonIndexRoute: typeof AuthLocPersonIndexRoute
  AuthResultIndexRoute: typeof AuthResultIndexRoute
  AuthSubmitlabIndexRoute: typeof AuthSubmitlabIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAboutIndexRoute: AuthAboutIndexRoute,
  AuthAssignmentlistIndexRoute: AuthAssignmentlistIndexRoute,
  AuthLocPersonIndexRoute: AuthLocPersonIndexRoute,
  AuthResultIndexRoute: AuthResultIndexRoute,
  AuthSubmitlabIndexRoute: AuthSubmitlabIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface PublicRouteChildren {
  PublicHomeIndexRoute: typeof PublicHomeIndexRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicHomeIndexRoute: PublicHomeIndexRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PublicRouteWithChildren
  '/about': typeof AuthAboutIndexRoute
  '/assignmentlist': typeof AuthAssignmentlistIndexRoute
  '/loc-person': typeof AuthLocPersonIndexRoute
  '/result': typeof AuthResultIndexRoute
  '/submit_lab': typeof AuthSubmitlabIndexRoute
  '/home': typeof PublicHomeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PublicRouteWithChildren
  '/about': typeof AuthAboutIndexRoute
  '/assignmentlist': typeof AuthAssignmentlistIndexRoute
  '/loc-person': typeof AuthLocPersonIndexRoute
  '/result': typeof AuthResultIndexRoute
  '/submit_lab': typeof AuthSubmitlabIndexRoute
  '/home': typeof PublicHomeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_auth/about/': typeof AuthAboutIndexRoute
  '/_auth/assignmentlist/': typeof AuthAssignmentlistIndexRoute
  '/_auth/loc-person/': typeof AuthLocPersonIndexRoute
  '/_auth/result/': typeof AuthResultIndexRoute
  '/_auth/submit_lab/': typeof AuthSubmitlabIndexRoute
  '/_public/home/': typeof PublicHomeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/assignmentlist'
    | '/loc-person'
    | '/result'
    | '/submit_lab'
    | '/home'
    | '/test'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/assignmentlist'
    | '/loc-person'
    | '/result'
    | '/submit_lab'
    | '/home'
    | '/test'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_public'
    | '/_auth/about/'
    | '/_auth/assignmentlist/'
    | '/_auth/loc-person/'
    | '/_auth/result/'
    | '/_auth/submit_lab/'
    | '/_public/home/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_public"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/about/",
        "/_auth/assignmentlist/",
        "/_auth/loc-person/",
        "/_auth/result/",
        "/_auth/submit_lab/"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/home/"
      ]
    },
    "/_auth/about/": {
      "filePath": "_auth/about/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/assignmentlist/": {
      "filePath": "_auth/assignmentlist/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/loc-person/": {
      "filePath": "_auth/loc-person/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/result/": {
      "filePath": "_auth/result/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/submit_lab/": {
      "filePath": "_auth/submit_lab/index.tsx",
      "parent": "/_auth"
    },
    "/_public/home/": {
      "filePath": "_public/home/index.tsx",
      "parent": "/_public"
    }
  }
}
ROUTE_MANIFEST_END */
